{"version":3,"sources":["firebase.js","Components/SearchBar.js","Components/Units.js","Components/WeatherIcon.js","API/openWeather.js","Components/Header.js","Components/Temperature.js","Components/TimeString.js","Components/Location.js","Components/CurrentWeather.js","Components/DateString.js","Components/WeekForecast.js","Components/HourString.js","Components/HourlyForecast.js","Components/LocationList.js","Components/MapComponent.js","Components/Footer.js","App.js","API/locationIq.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SearchBar","props","action","className","htmlFor","id","onChange","change","type","placeholder","onClick","submit","aria-label","title","icon","faSearchLocation","getLocation","faMapMarkerAlt","Units","updateUnits","units","value","Icon","description","src","alt","Header","href","Temperature","temp","toFixed","TimeString","time","hours","getHours","minString","getMinutes","toString","padStart","string","Location","city","province","country","CurrentWeather","weather","Date","current","dt","toDateString","class","humidity","sunrise","sunset","feels_like","DateString","lastIndex","lastIndexOf","substring","WeekForecast","daily","map","day","index","max","min","HourString","HourlyForecast","hourly","page","scroll","faChevronLeft","hour","faChevronRight","LocationList","locations","onSelect","onRemove","state","selectedLocation","loc","data","length","key","faTrashAlt","MapComponent","lat","lon","mapType","position","e","target","name","checked","Map","center","zoom","TileLayer","attribution","url","Footer","rel","Component","App","preventDefault","navigator","geolocation","getCurrentPosition","setState","coords","latitude","longitude","getCity","getWeather","console","log","searchLocation","location","axios","method","endpoint","dataResponse","params","format","q","then","result","updateLocationState","selectLocation","locationLoading","removeLocation","database","ref","child","uid","remove","updateMapType","hourlyScroll","hourlyPage","isLoading","weatherLoading","firebaseLoading","locationList","this","on","response","newState","val","user","users","push","auth","signInAnonymously","catch","error","code","message","onAuthStateChanged","address","updateList","dbRef","canPush","list","appid","openWeather","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.007bc7ff.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDGLQ0nTfj4mfoTHmafn5bUwAJLfz7bf_k\",\r\n  authDomain: \"weather-app-db102.firebaseapp.com\",\r\n  databaseURL: \"https://weather-app-db102.firebaseio.com\",\r\n  projectId: \"weather-app-db102\",\r\n  storageBucket: \"weather-app-db102.appspot.com\",\r\n  messagingSenderId: \"43100392282\",\r\n  appId: \"1:43100392282:web:a7de5bc1a8d3446cb18163\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearchLocation, faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport '../styles/SearchBar.css'\r\n\r\n/**\r\n * The search bar for looking up new locations\r\n * @param {object} props \r\n */\r\nexport default function SearchBar(props) {\r\n\r\n\treturn (\r\n    <form action=\"submit\" className=\"searchBar\">\r\n      <label className=\"sr-only\" htmlFor={props.id}>Search Location</label>\r\n      <input\r\n        onChange={props.change}\r\n        type=\"text\"\r\n        id={props.id}\r\n        placeholder={props.placeholder}\r\n      />\r\n\r\n      <button\r\n        onClick={props.submit}\r\n        type=\"submit\"\r\n        aria-label=\"Search Location\"\r\n        title=\"Search Location\"\r\n      >\r\n        <FontAwesomeIcon icon={faSearchLocation} />\r\n      </button>\r\n\r\n      <button\r\n        onClick={props.getLocation}\r\n        aria-label=\"Use Current Location\"\r\n        title=\"Use Current Location\"\r\n      >\r\n        <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport '../styles/Units.css'\r\n\r\n/**\r\n * Select which units of measurement to use\r\n */\r\nexport default function Units(props) {\r\n\tconst { updateUnits, units } = props;\r\n\r\n\treturn (\r\n      <div className=\"Units\">\r\n        <button\r\n          className={units === \"metric\" ? \"selected\" : \"\"}\r\n          value=\"metric\"\r\n          onClick={updateUnits}\r\n        >\r\n          metric\r\n        </button>\r\n        <span>/</span>\r\n        <button\r\n          className={units === \"imperial\" ? \"selected\" : \"\"}\r\n          value=\"imperial\"\r\n          onClick={updateUnits}\r\n        >\r\n          imperial\r\n        </button>\r\n        <span>/</span>\r\n        <button\r\n          className={units === \"kelvin\" ? \"selected\" : \"\"}\r\n          value=\"kelvin\"\r\n          onClick={updateUnits}\r\n        >\r\n          kelvin\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nimport { weatherIconEndpoint } from '../API/openWeather'\r\n\r\nimport '../styles/WeatherIcon.css'\r\n\r\nexport default function Icon(props) {\r\n\t\r\n\tconst { type, description } = props;\r\n\t\r\n\treturn (\r\n\t\t<img className=\"weather-icon\" src={`${weatherIconEndpoint}${type}@2x.png`} alt={description}/>\r\n\t)\r\n}\r\n","// OpenWeather API - openweathermap.org\r\n\r\nimport axios from 'axios'\r\n\r\nconst endpoint = 'https://api.openweathermap.org/data/2.5/onecall';\r\nconst key = '4de58afe7c0aa78a01498b122c46d7e2';\r\n\r\nexport const weatherIconEndpoint = 'http://openweathermap.org/img/wn/';\r\n\r\n\r\nexport default function openWeather(latitude, longitude, units) {\r\n\treturn axios({\r\n\t\tmethod: \"GET\",\r\n\t\turl: endpoint,\r\n\t\tdataResponse: \"json\",\r\n\t\tparams: {\r\n\t\t\tappid: key,\r\n\t\t\tunits: units,\r\n\t\t\tlat: latitude,\r\n\t\t\tlon: longitude,\r\n\t\t}\r\n\t})\r\n}","import React from 'react'\r\n\r\nimport SearchBar from './SearchBar'\r\nimport Units from './Units'\r\nimport WeatherIcon from './WeatherIcon'\r\n\r\nimport '../styles/Header.css'\r\n\r\n\r\nexport default function Header(props) {\r\n\tconst { getLocation, submit, change, updateUnits, units } = props;\r\n\t\t\r\n\treturn (\r\n    <header>\r\n      <div className=\"wrapper\">\r\n        <div className=\"header-container\">\r\n          <h1>\r\n            <a href=\"#\">\r\n              <WeatherIcon type=\"02d\" description=\"TheWeather Logo\" />\r\n              <span>The</span>Weather\r\n            </a>\r\n          </h1>\r\n\r\n          <div className=\"header-right\">\r\n            <Units updateUnits={updateUnits} units={units} />\r\n\r\n            <SearchBar\r\n              getLocation={getLocation}\r\n              submit={submit}\r\n              change={change}\r\n              id=\"search-location\"\r\n              placeholder=\"Enter Location\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * Display temperature with provided unit\r\n */\r\nexport default function Temperature(props) {\r\n\r\n\tconst { temp, units } = props;\r\n\r\n\treturn (\r\n    <span>\r\n      {temp.toFixed(1)}\r\n      {!units ? '' : units === \"metric\" ? \"°C\" : units === \"imperial\" ? \"°F\" : \"K\"}\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TimeString(props) {\r\n  const { time } = props;\r\n\r\n\tconst hours = time.getHours();\r\n\tconst mins = time.getMinutes();\r\n\tconst minString = mins.toString().padStart(2, \"0\");\r\n\t\r\n\tlet string =\r\n    hours % 12\r\n      ? `${(hours % 12).toString()}:${minString}`\r\n      : `12:${minString}`;\r\n\r\n  if (hours / 12 >= 1) {\r\n    string += \"pm\";\r\n  } else {\r\n    string += \"am\";\r\n  }\r\n\r\n  return <span>{string}</span>;\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Location(props) {\r\n\t\r\n\tconst { city, province, country } = props;\r\n\t\r\n\treturn (\r\n    <span>\r\n      {`${city ? `${city}, ` : \"\"}${province ? `${province}, ` : \"\"}${country}`}\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport WeatherIcon from './WeatherIcon';\r\nimport Temperature from './Temperature';\r\nimport TimeString from './TimeString'\r\nimport Location from './Location'\r\n\r\nimport '../styles/CurrentWeather.css';\r\n\r\n/**\r\n * The current weather\r\n */\r\nexport default function CurrentWeather(props) {\r\n\r\n\tconst {city, province, country, weather, units } = props;\r\n\r\n\tconst time = new Date(weather.current.dt * 1000);\r\n\r\n\r\n\treturn (\r\n    <div className=\"currentWeather-container\">\r\n      <h2>\r\n        <Location city={city} province={province} country={country} />\r\n      </h2>\r\n      <p>{time.toDateString()}</p>\r\n\r\n      <div className=\"currentWeather\">\r\n        <div class=\"currentWeather-left\">\r\n          <p>Humidity: {weather.current.humidity}%</p>\r\n          <p>\r\n            Sunrise:{\" \"}\r\n            <TimeString time={new Date(weather.current.sunrise * 1000)} />\r\n          </p>\r\n          <p>\r\n            Sunset:{\" \"}\r\n            <TimeString time={new Date(weather.current.sunset * 1000)} />\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"currentWeather-middle\">\r\n          <p className=\"description\">\r\n            {weather.current.weather[0].description}\r\n          </p>\r\n\r\n          <WeatherIcon\r\n            type={weather.current.weather[0].icon}\r\n            description={weather.current.weather[0].description}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"currentWeather-right\">\r\n          <p className=\"currentWeather-temp\">\r\n            <Temperature temp={weather.current.temp} units={units} />\r\n          </p>\r\n\r\n          <p>\r\n            Feels like:{\" \"}\r\n            <Temperature temp={weather.current.feels_like} units={units} />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * Formatted date\r\n */\r\nexport default function DateString(props) {\r\n\t\r\n\tconst { time } = props;\r\n\r\n\tlet string = time;\r\n\tconst lastIndex = string.lastIndexOf(' ');\r\n\r\n\tstring = string.substring(0, lastIndex);\r\n\r\n\treturn <span>{string}</span>;\r\n}\r\n","import React from 'react'\r\n\r\nimport WeatherIcon from './WeatherIcon'\r\nimport Temperature from './Temperature'\r\nimport DateString from './DateString'\r\n\r\nimport '../styles/WeekForecast.css'\r\n\r\nexport default function WeekForecast(props) {\r\n\r\n\tconst { daily, units } = props;\r\n\r\n\treturn (\r\n\t\t<div className=\"forecast-week-container\">\r\n\t\t\t<h2>Weekly Forecast</h2>\r\n\r\n\t\t\t<div className=\"forecast-week\">\r\n\t\t\t\t{daily.map((day, index) => {\r\n\t\t\t\t\tif (index > 0) {\r\n\t\t\t\t\t\tconst time = new Date(day.dt * 1000); // in milliseconds so multiply by 1000 to get seconds\r\n\r\n\t\t\t\t\t\treturn (\r\n              <div className=\"forecast-day\">\r\n                <p className=\"forecast-date\">\r\n                  <DateString time={time.toDateString()} />\r\n                </p>\r\n\r\n                <WeatherIcon\r\n                  type={day.weather[0].icon}\r\n                  description={day.weather[0].description}\r\n                />\r\n\r\n                <p className=\"description\">{day.weather[0].description}</p>\r\n\r\n                <p>\r\n                  <Temperature temp={day.temp.max} units={''} /> / <Temperature temp={day.temp.min} units={units} />\r\n                </p>\r\n              </div>\r\n            );\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HourString(props) {\r\n\t\r\n\tconst { time } = props;\r\n\r\n\tconst hours = time.getHours();\r\n\tlet string = hours % 12 ? (hours % 12).toString() : '12';\r\n\r\n\tif ( hours / 12 >= 1 ) {\r\n\t\tstring += 'pm'\r\n\t} else {\r\n\t\tstring += 'am'\r\n\t}\r\n\r\n\treturn <span>{string}</span>;\r\n}\r\n","import React from 'react'\r\n\r\nimport Temperature from './Temperature'\r\nimport HourString from './HourString'\r\nimport WeatherIcon from './WeatherIcon'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport '../styles/HourlyForecast.css'\r\n\r\nexport default function HourlyForecast(props) {\r\n\tconst { hourly, units, page, scroll } = props;\r\n\r\n\treturn (\r\n    <div className=\"forecast-hourly-container\">\r\n      <h2>Hourly Forecast</h2>\r\n      <div className=\"forecast-hourly\">\r\n        <button className={page === 0 ? 'disabled' : ''} onClick={() => scroll(page - 1)} aria-label=\"Scroll Left\">\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n        </button>\r\n        {hourly.map((hour, index) => {\r\n          const time = new Date(hour.dt * 1000); // in milliseconds so multiply by 1000 to get seconds\r\n\r\n          if (index >= page * 12 && index < (page + 1) * 12) {\r\n            //only 12 hours\r\n            return (\r\n              <div className=\"forecast-hour\">\r\n                <p>\r\n                  <HourString time={time} />\r\n                </p>\r\n\r\n                <p>\r\n                  <Temperature temp={hour.temp} units={units} />\r\n                </p>\r\n\r\n                <WeatherIcon\r\n                  type={hour.weather[0].icon}\r\n                  description={hour.weather[0].description}\r\n                />\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n\r\n        <button className={page === 1 ? 'disabled' : ''} onClick={() => scroll(page + 1)} aria-label=\"Scroll Right\">\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Location from './Location'\r\n\r\nimport '../styles/LocationList.css'\r\n\r\nexport default function LocationList(props) {\r\n\t\r\n\tconst { locations, onSelect, onRemove, city, state, country} = props;\r\n\t\r\n\t// /**\r\n\t//  * Return true if this is the selected location\r\n\t//  */\r\n\tconst selectedLocation = (loc) => {\r\n\t\treturn loc.data.city === city && loc.data.state === state && loc.data.country === country ? true : false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"LocationList\">\r\n\t\t\t<h3>Saved Locations</h3>\r\n\t\t\t\r\n\t\t\t<ul>\r\n\t\t\t\t{!locations.length ? \r\n\t\t\t\t<li><p>No locations in list</p></li> :\r\n\t\t\t\t\r\n\t\t\t\tlocations.map( loc => {\r\n\t\t\t\t\tconst { city, state, country } = loc.data;\r\n\r\n\t\t\t\t\treturn (\r\n            <div className={`LocationList-loc ${selectedLocation(loc) ? 'selected' : ''}`}>\r\n              <li key={loc.key}>\r\n                <button className=\"LocationList-select\" onClick={() => onSelect(loc.data)}>\r\n                  <Location city={city} province={state} country={country} />\r\n                </button>\r\n              </li>\r\n\r\n              <button\r\n                onClick={() => onRemove(loc.key)}\r\n                className=\"LocationList-remove\"\r\n                aria-label=\"Remove\"\r\n                title=\"Remove\"\r\n              >\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </button>\r\n            </div>\r\n          );\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n","// import { ImageOverlay } from 'leaflet';\r\nimport React, { Component } from 'react'\r\n\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\n\r\nimport '../styles/MapComponent.css'\r\n\r\n// import Search from 'react-leaflet-search';\r\n\r\nexport default function MapComponent(props) {\r\n\tconst { lat, lon, mapType, onChange } = props;\r\n\tlet zoom = 5;\r\n\r\n\tconst position = [lat, lon];\r\n\r\n\t/**\r\n\t * Pass the value to parent component\r\n\t */\r\n\tconst passValue = e => {\r\n\t\tonChange(e.target.value);\r\n\t}\r\n\r\n\treturn (\r\n    <div className=\"MapComponent\">\r\n\r\n      {/* map layer control */}\r\n      <form onChange={passValue} className=\"mapLayer\" action=\"#\">\r\n        <div className=\"mapLayer-control\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"mapLayerControl\"\r\n            id=\"clouds_new\"\r\n            value=\"clouds_new\"\r\n            checked={mapType === \"clouds_new\" ? true : false}\r\n          />\r\n          <label htmlFor=\"clouds_new\">Clouds</label>\r\n        </div>\r\n        <div className=\"mapLayer-control\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"mapLayerControl\"\r\n            id=\"precipitation_new\"\r\n            value=\"precipitation_new\"\r\n            checked={mapType === \"precipitation_new\" ? true : false}\r\n          />\r\n          <label htmlFor=\"precipitation_new\">Precipitation</label>\r\n        </div>\r\n        <div className=\"mapLayer-control\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"mapLayerControl\"\r\n            id=\"temp_new\"\r\n            value=\"temp_new\"\r\n            checked={mapType === \"temp_new\" ? true : false}\r\n          />\r\n          <label htmlFor=\"temp_new\">Temperature</label>\r\n        </div>\r\n      </form>\r\n\r\n      <Map center={position} zoom={zoom}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n        />\r\n\r\n        <TileLayer\r\n          url={`https://tile.openweathermap.org/map/${mapType}/{z}/{x}/{y}.png?appid=4de58afe7c0aa78a01498b122c46d7e2`}\r\n        />\r\n      </Map>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport '../styles/Footer.css'\r\n\r\nexport default class Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n      <footer>\r\n        <div className=\"wrapper\">\r\n          <div className=\"footer-container\">\r\n            <p>\r\n              Made at <a href=\"https://junocollege.com/\" rel=\"noreferrer\">Juno College</a> by{\" \"}\r\n              <a href=\"https://github.com/nkanigsberg\" rel=\"noreferrer\">Nathan Kanigsberg</a>\r\n            </p>\r\n            <p>© Copyright 2020</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport firebase from './firebase';\n\nimport './styles/fonts.css';\nimport './styles/App.css';\nimport './styles/media1280.css';\nimport './styles/media768.css';\n\nimport openWeather from './API/openWeather';\nimport { reverseGeo, forwardGeo } from './API/locationIq';\n\nimport Header from './Components/Header';\nimport CurrentWeather from './Components/CurrentWeather';\nimport WeekForecast from './Components/WeekForecast';\nimport HourlyForecast from './Components/HourlyForecast';\nimport LocationList from './Components/LocationList'\nimport MapComponent from './Components/MapComponent';\nimport Footer from './Components/Footer';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      lat: 43.6534,\n      lon: -79.3839,\n      location: \"\",\n      weather: {},\n      city: \"\",\n      province: \"\",\n      country: \"\",\n      isLoading: false,\n      weatherLoading: true,\n      locationLoading: true,\n      firebaseLoading: true,\n      units: \"metric\",\n\t\t\tlocationList: [],\n\t\t\tmapType: \"clouds_new\",\n\t\t\tuid: '',\n\t\t\thourlyPage: 0,\n    };\n  }\n\n  componentDidMount() {\n\t\tthis.getLocation();\n\n\t\tconst dbRef = firebase.database().ref();\n\n\t\tdbRef.on('value', response => {\n\t\t\tconst newState = [];\n\t\t\tconst data = response.val();\n\t\t\t\n\t\t\t// if there is data\n\t\t\tif (data) {\n\t\t\t\tconst user = data.users[this.state.uid];\n\n\t\t\t\tfor (let key in user) {\n\t\t\t\t\tnewState.push({key: key, data: user[key]});\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tlocationList: newState,\n\t\t\t\t\tfirebaseLoading: false,\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({\n          locationList: [],\n          firebaseLoading: false,\n        });\n\t\t\t}\n\t\t})\n\n\t\t// firebase anonymous account auth\n\t\tfirebase\n\t\t\t.auth()\n\t\t\t.signInAnonymously()\n\t\t\t.catch(function (error) {\n\t\t\t\t// Handle Errors here.\n\t\t\t\tconsole.log(error.code);\n\t\t\t\tconsole.log(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t\tfirebase.auth().onAuthStateChanged( (user) => {\n        if (user) {\n          // User is signed in.\n\t\t\t\t\tconst uid = user.uid;\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuid: uid,\n\t\t\t\t\t})\n        } else {\n\t\t\t\t\t// User is signed out.\n\t\t\t\t\tconsole.log('signed out');\n        }\n      });\n  }\n\n  // get location data for user's device\n  getLocation = (e = null) => {\n\t\tif (e) e.preventDefault();\n\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n\n\t\t\t\tthis.setState({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude,\n        });\n\n\t\t\t\tconst {lat, lon, units} = this.state;\n\n\t\t\t\tthis.getCity(lat, lon);\n\t\t\t\tthis.getWeather(lat, lon, units);\n\n      });\n    } else {\n      console.log(\"No geolocation\");\n    }\n  }\n\n  // get city name from locationIQ API\n  getCity(lat, lon) {\n\t\t\n\t\tthis.setState({\n\t\t\tisLoading: true,\n\t\t})\n\n\t\treverseGeo(lat, lon).then(result => {\n\t\t\t\n\t\t\tconst { city, state, country } = result.data.address;\n\t\t\n      this.setState(\n        {\n          city: city,\n          province: state,\n          country: country,\n          locationLoading: false,\n        },\n        this.updateList\n      );\t\n\t\t})\n\t}\n\n\t/**\n\t * Update the location list from state\n\t */\n\tupdateList() {\n\t\tif (!this.state.firebaseLoading) {\n      const dbRef = firebase.database().ref();\n\t\t\tlet canPush = true;\n\t\t\t\n      // check to see if location is already in list\n      for (let loc in this.state.locationList) {\n        const list = this.state.locationList;\n\n        if (\n          list[loc].data.city === this.state.city &&\n          list[loc].data.state === this.state.province &&\n          list[loc].data.country === this.state.country\n        ) {\n          canPush = false;\n        }\n      }\n\n      // if not in list, push city to firebase\n      if (canPush && this.state.locationList.length < 6) {\n        dbRef.child('users').child(this.state.uid).push({\n          city: this.state.city ? this.state.city : '',\n          state: this.state.province ? this.state.province : '',\n          country: this.state.country,\n          lat: this.state.lat,\n          lon: this.state.lon,\n        });\n      }\n    }\n\t}\n\n\t\n\t// get weather from openWeather API\n  getWeather(lat, lon, units) {\n\n\t\topenWeather(lat, lon, units).then(result => {\n\n     \tthis.setState({\n\t\t\t\t weather: result.data,\n\t\t\t\t weatherLoading: false,\n\t\t\t\t units: units,\n\t\t\t});\n    });\n\t}\n\n\t/**\n\t * Search for coordinates from input location\n\t * @param {event} e \n\t */\n\tsearchLocation = e => {\n\t\te.preventDefault();\n\n\t\tif (this.state.location) {\n      forwardGeo(this.state.location).then((result) => {\n        const location = result.data[0];\n\t\t\t\t\n\t\t\t\tthis.setState({\n\t\t\t\t\tlat: location.lat,\n\t\t\t\t\tlon: location.lon,\n        });\n\n\t\t\t\tconst { lat, lon, units} = this.state;\n\n\t\t\t\tthis.getCity(lat, lon);\n\t\t\t\tthis.getWeather(lat, lon, units);\n\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Update the location state on change of input\n\t */\n\tupdateLocationState = e => {\n\t\tthis.setState({\n      location: e.target.value,\n    });\n\t}\n\n\tupdateUnits = e => {\n\t\tconst { lat, lon, units } = this.state;\n\n\t\tthis.getWeather(lat, lon, e.target.value);\n\t}\n\t\n\n\t/**\n\t * Change location on selection from list\n\t * @param {*} data \n\t */\n\tselectLocation = (data) => {\n\t\tthis.getWeather(data.lat, data.lon, this.state.units);\n\n\t\tthis.setState({\n\t\t\tlat: data.lat,\n\t\t\tlon: data.lon,\n\t\t\tcity: data.city,\n\t\t\tprovince: data.state,\n\t\t\tcountry: data.country,\n\t\t\tlocationLoading: false,\n\t\t})\n\t}\n\n\t/**\n\t * Remove location from list\n\t * @param {*} key \n\t */\n\tremoveLocation = (key) => {\n\t\tconst dbRef = firebase.database().ref();\n\n\t\tdbRef.child('users').child(this.state.uid).child(key).remove();\n\t}\n\n\n\tupdateMapType = value => {\n\t\tthis.setState({\n\t\t\tmapType: value,\n\t\t})\n\t}\n\n\thourlyScroll = page => {\n\t\t\n\t\tif (page >=0 && page <= 1) {\n\t\t\tthis.setState({\n\t\t\thourlyPage: page,\n\t\t})}\n\t}\n\n\n\n  render() {\n    const {\n      weather,\n      weatherLoading,\n\t\t\tlocationLoading,\n\t\t\tisLoading,\n      city,\n      province,\n      country,\n\t\t\tunits,\n\t\t\tlat,\n\t\t\tlon,\n\t\t\tmapType,\n\t\t\thourlyPage,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Header\n          getLocation={this.getLocation}\n          submit={this.searchLocation}\n          change={this.updateLocationState}\n\t\t\t\t\tupdateUnits={this.updateUnits}\n\t\t\t\t\tunits={units}\n        />\n\n        <main>\n          <div className=\"wrapper\">\n            <div class=\"main-container\">\n              <div class=\"main-left\">\n                {/* display main content only after loaded from API */}\n                {weatherLoading || locationLoading ? (\n                  <p>{isLoading ? \"Loading...\" : \"\"}</p>\n                ) : (\n                  <>\n\t\t\t\t\t\t\t\t\t\t<CurrentWeather\n\t\t\t\t\t\t\t\t\t\t\tcity={city}\n\t\t\t\t\t\t\t\t\t\t\tprovince={province}\n\t\t\t\t\t\t\t\t\t\t\tcountry={country}\n\t\t\t\t\t\t\t\t\t\t\tweather={weather}\n\t\t\t\t\t\t\t\t\t\t\tunits={units}\n\t\t\t\t\t\t\t\t\t\t/>\n\n                    <WeekForecast daily={weather.daily} units={units} />\n\n                    <HourlyForecast hourly={weather.hourly} units={units} page={hourlyPage} scroll={this.hourlyScroll} />\n                  </>\n                )}\n              </div>\n\n              <div className=\"main-right\">\n                <LocationList\n                  onSelect={this.selectLocation}\n                  onRemove={this.removeLocation}\n\t\t\t\t\t\t\t\t\tlocations={this.state.locationList}\n\t\t\t\t\t\t\t\t\tcity={city}\n\t\t\t\t\t\t\t\t\tstate={province}\n\t\t\t\t\t\t\t\t\tcountry={country}\n                />\n\n\t\t\t\t\t\t\t\t<MapComponent\n\t\t\t\t\t\t\t\t\tlat={lat}\n\t\t\t\t\t\t\t\t\tlon={lon}\n\t\t\t\t\t\t\t\t\tmapType={mapType}\n\t\t\t\t\t\t\t\t\tonChange={this.updateMapType}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\n              </div>\n            </div>\n          </div>\n        </main>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// LocationIQ API - locationiq.com\r\n\r\nimport axios from 'axios'\r\n\r\nconst endpoint = \"https://us1.locationiq.com/v1/\";\r\nconst key = \"a2f6bb0bb601e5\";\r\n\r\n\r\n/**\r\n * Reverse Geocoding - get location data from coordinates\r\n * @param {number} latitude\r\n * @param {number} longitude\r\n * @returns {object} axiosPromise\r\n */\r\nexport function reverseGeo(latitude, longitude) {\r\n\treturn axios({\r\n    method: \"GET\",\r\n    url: endpoint + \"reverse.php\",\r\n    dataResponse: \"json\",\r\n    params: {\r\n      format: \"json\",\r\n      key: key,\r\n      lat: latitude,\r\n\t\t\tlon: longitude,\r\n    },\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Forward Geocoding - get coordinates from location name\r\n * @param {string} location The location to get coordinates for\r\n * @returns {object} axiosPromise\r\n */\r\nexport function forwardGeo(location) {\r\n  return axios({\r\n    method: \"GET\",\r\n    url: endpoint + \"search.php\",\r\n    dataResponse: \"json\",\r\n    params: {\r\n      format: \"json\",\r\n      key: key,\r\n      q: location,\r\n    },\r\n  });\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}